?aggregate
?dplyr
??dplyr
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151116_psov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
propA<-mutate(propA, prop="A")
propB<-mutate(propA, prop="B")
propC<-mutate(propA, prop="C")
propD<-mutate(propA, prop="D")
propE<-mutate(propA, prop="E")
propF<-mutate(propA, prop="F")
propG<-mutate(propA, prop="G")
propH<-mutate(propA, prop="H")
propI<-mutate(propA, prop="I")
propJ<-mutate(propA, prop="J")
propK<-mutate(propA, prop="K")
# Create a big dataframe with all the propositions
prop<-rbind(propA,propB,propC,propD,propE,propF,propG,propH,propI,propJ,propK)
setwd("~/Documents/DOCUMENTS/SITES/maps/SF2015")
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151116_psov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
propA<-mutate(propA, prop="A")
propB<-mutate(propA, prop="B")
propC<-mutate(propA, prop="C")
propD<-mutate(propA, prop="D")
propE<-mutate(propA, prop="E")
propF<-mutate(propA, prop="F")
propG<-mutate(propA, prop="G")
propH<-mutate(propA, prop="H")
propI<-mutate(propA, prop="I")
propJ<-mutate(propA, prop="J")
propK<-mutate(propA, prop="K")
# Create a big dataframe with all the propositions
prop<-rbind(propA,propB,propC,propD,propE,propF,propG,propH,propI,propJ,propK)
View(prop)
prop2<-aggregate(prop, by=list("prop", "PrecinctID"), sum)
prop2<-aggregate(prop, by=list("PrecinctID"), sum)
prop %>% group_by(PrecinctID, prop) %>% summarize_each(funs(sum))
prop %>% group_by(PrecinctID, prop) %>% summarise_each(funs(sum))
prop %>% group_by(PrecinctID, prop) %>% summarise_each(funs(sum))
prop2 <- prop %>% group_by(PrecinctID, prop) %>% summarise_each(funs(sum))
View(prop2)
View(propA)
prop2 <- prop %>% group_by(PrecinctID, prop) %>% summarise(sum)
prop2 <- prop %>% group_by(PrecinctID, prop) %>% summarize(sum)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
con<-file('data/20151116_psov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
close(con)
View(propA)
propA %>% group_by(PrecinctID) %>% summarise_each(funs(sum))
propA2<-propA %>% group_by(PrecinctID) %>% summarise_each(funs(sum))
View(propA2)
names(propA)
)
propA2<-propA %>%
group_by(PrecinctID)
%>% summarise(PYes=yes/Ballots.Cast,
PNo=No/Ballots.Cast,
Turnout=mean(Turnout....),
Ballots=sum(Ballots.cast))
propA2<-propA %.%
group_by(PrecinctID)
%.% summarise(PYes=yes/Ballots.Cast,
PNo=No/Ballots.Cast,
Turnout=mean(Turnout....),
Ballots=sum(Ballots.cast))
propA2<-propA %>%
group_by(PrecinctID)
%>% summarise(PYes=yes/Ballots.Cast)
propA2<-propA %>%
group_by(PrecinctID)
%>% summarise(PYes=yes)
propA2<-propA %>%
group_by(PrecinctID)
%>% summarise(PYes=sum(yes))
propA2<-propA %>%
group_by(PrecinctID)%>% summarise(PYes=sum(yes))
propA2<-propA %>%
group_by(PrecinctID)%>% summarise(PYes=sum(Yes))
View(propA2)
propA2<-propA %>%
group_by(PrecinctID)%>% summarise(PYes=Yes/Ballots.cast))
propA2<-propA %>%
group_by(PrecinctID)%>% summarise(PYes=Yes/Ballots.cast)
propA2<-propA %>%
group_by(PrecinctID)%>% summarise(PYes=Yes/Ballots.Cast)
propA2<-propA %>%
group_by(PrecinctID)%>% summarise(Yes=sum(Yes))
View(propA2)
View(propA2)
propA2<-propA %>%
group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No))
View(propA2)
propA2<-propA %>%
group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))
View(propA2)
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151116_psov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
propList <- c("propA", "propB", "propC", "propD", "propE", "propF", "propG", "propH", "porpI", "propJ", "propK")
for (i in propList) {
i <- i %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))
}
summary <- function(prop) {
prop <- prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))
}
summary <- function(prop) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))
}
?summary
propSummary <- function(prop) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))
}
propA <- propSummary(propA)
View(propA)
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))
%>% mutate(prop=letter)
}
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))%>% mutate(prop=letter)}
propA <- propSummary(propA, "A")
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151116_psov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
# aggregate 'Vote By Mail' and 'Election Day'
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))%>% mutate(prop=letter)}
propA <- propSummary(propA, "A")
View(propA)
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151116_psov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))
%>% mutate(prop=letter, PYes=Yes/Ballots)
}
aggregate 'Vote By Mail' and 'Election Day'
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))%>% mutate(prop=letter, PYes=Yes/Ballots)}
propA <- propSummary(propA, "A")
View(propA)
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=mean(Turnout....))%>% mutate(prop=letter, PYes=Yes/Ballots, PNo=No/Ballots)}
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151116_psov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
propA <- propSummary(propA, "A")
View(propA)
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151116_psov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
# aggregate 'Vote By Mail' and 'Election Day'
# + add prop letter
# + Calculate Percentage
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=sum(Turnout....))%>% mutate(prop=letter, PYes=Yes/Ballots, PNo=No/Ballots)}
propA <- propSummary(propA, "A")
View(propA)
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151119_sov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
View(propB)
View(propI)
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151119_sov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
# aggregate 'Vote By Mail' and 'Election Day'
# + add prop letter
# + Calculate Percentage
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=sum(Turnout....))%>% mutate(prop=letter, PYes=Yes/Ballots, PNo=No/Ballots)}
propA <- propSummary(propA, "A")
propB <- propSummary(propB, "B")
propC <- propSummary(propC, "C")
propD <- propSummary(propD, "D")
propE <- propSummary(propE, "E")
propF <- propSummary(propF, "F")
propG <- propSummary(propG, "G")
propH <- propSummary(propH, "H")
propI <- propSummary(propI, "I")
propJ <- propSummary(propJ, "J")
propK <- propSummary(propK, "K")
# Create a big dataframe with all the propositions
# prop<-rbind(propA,propB,propC,propD,propE,propF,propG,propH,propI,propJ,propK)
View(propI)
View(propG)
View(propH)
View(propI)
View(propJ)
View(propK)
?write.csv
source('~/.active-rstudio-document', echo=TRUE)
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151119_sov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
# aggregate 'Vote By Mail' and 'Election Day'
# + add prop letter
# + Calculate Percentage
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=sum(Turnout....))%>% mutate(prop=letter, PYes=Yes/Ballots, PNo=No/Ballots)}
propA <- propSummary(propA, "A")
propB <- propSummary(propB, "B")
propC <- propSummary(propC, "C")
propD <- propSummary(propD, "D")
propE <- propSummary(propE, "E")
propF <- propSummary(propF, "F")
propG <- propSummary(propG, "G")
propH <- propSummary(propH, "H")
propI <- propSummary(propI, "I")
propJ <- propSummary(propJ, "J")
propK <- propSummary(propK, "K")
# Create a big dataframe with all the propositions
# prop<-rbind(propA,propB,propC,propD,propE,propF,propG,propH,propI,propJ,propK)
write.csv(propI, file="data/propI.csv")
library(dplyr)
###################################
# Read raw data and create a data frame for each ballot proposition.
con<-file('data/20151119_sov.tsv')
open(con)
propA<-read.table(con, sep="\t", header=TRUE,skip=10326,nrow=794)
propB<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propC<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propD<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propE<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propF<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propG<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propH<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propI<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propJ<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
propK<-read.table(con, sep="\t", header=TRUE,skip=58,nrow=794)
close(con)
# aggregate 'Vote By Mail' and 'Election Day'
# + add prop letter
# + Calculate Percentage
propSummary <- function(prop, letter) {
prop %>% group_by(PrecinctID)%>% summarise(Yes=sum(Yes),
No=sum(No),
Ballots=sum(Ballots.Cast),
Turnout=sum(Turnout....))%>% mutate(prop=letter, PYes=Yes/(Yes+No), PNo=No/(Yes+No))}
propA <- propSummary(propA, "A")
propB <- propSummary(propB, "B")
propC <- propSummary(propC, "C")
propD <- propSummary(propD, "D")
propE <- propSummary(propE, "E")
propF <- propSummary(propF, "F")
propG <- propSummary(propG, "G")
propH <- propSummary(propH, "H")
propI <- propSummary(propI, "I")
propJ <- propSummary(propJ, "J")
propK <- propSummary(propK, "K")
# Create a big dataframe with all the propositions
# prop<-rbind(propA,propB,propC,propD,propE,propF,propG,propH,propI,propJ,propK)
write.csv(propI, file="data/propI.csv")
View(propA)
View(propI)
View(propI)
?if
whoWins <- function(PercYes, PercNo) {
if (PercYes > PercNo) {
Perc <- PercYes
}
else
Perc <- -PercNo
}
propI2 <- propI %>% mutate(Perc=whoWins(PYes, PNo))
?tapply
